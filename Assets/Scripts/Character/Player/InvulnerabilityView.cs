using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using UnityEngine.UI;
using Agava.YandexGames;
using General;
using GameAnalyticsSDK;
using UnityEngine.SceneManagement;

public class InvulnerabilityView : MonoBehaviour
{
    [SerializeField] private Image _panel;
    [SerializeField] private Button _skipButton;
    [SerializeField] private Button _adsButton;

    private DeathVariant _deathVariant;

    public event Action<DeathVariant> Died;
    public event Action BecameInvulnerable;

    public static event Action AdOpened;
    public static event Action AdClosed;
    public static event Action Showed;
    public static event Action Closed;
    public static event Action<int> LookedAd;

    private void OnEnable()
    {
        _skipButton.onClick.AddListener(Die);
        _adsButton.onClick.AddListener(OnAdsClick);
    }

    private void OnDisable()
    {
        _skipButton.onClick.RemoveListener(Die);
        _adsButton.onClick.RemoveListener(OnAdsClick);
    }

    public void Show(DeathVariant deathVariant)
    {
        _deathVariant = deathVariant;
        //Здесь включать паузу
        _panel.gameObject.SetActive(true);
        Showed?.Invoke();
    }

    private void OnAdsClick()
    {

        LookedAd?.Invoke(SceneManager.GetActiveScene().buildIndex);
#if UNITY_WEBGL && !UNITY_EDITOR
        VideoAd.Show(onOpenCallback: OnAdOpen, BecomeInvulnerable, onCloseCallback: OnAdClose);
#endif
    }

    private void OnAdOpen()
    {
       // EventsSender.Instance.SendAdEvent(GAAdAction.Clicked, GAAdType.RewardedVideo);
        AdOpened?.Invoke();
    }

    private void OnAdClose()
    {
        AdClosed?.Invoke();
        Closed?.Invoke();
    }

    public void BecomeInvulnerable()
    {
       // EventsSender.Instance.SendAdEvent(GAAdAction.RewardReceived, GAAdType.RewardedVideo);
       // EventsSender.Instance.SendProgressionEvent("Get_invulnerability");
        BecameInvulnerable?.Invoke();
        _panel.gameObject.SetActive(false);
    }

    public void Die()
    {
        Debug.Log("Closed?.Invoke();");
        Closed?.Invoke();
        Debug.Log("Died?.Invoke(_deathVariant);");
        Died?.Invoke(_deathVariant);
        Debug.Log("_panel.gameObject.SetActive(false);");
        _panel.gameObject.SetActive(false);
    }
}
